/*
 * This source file was generated by the Gradle 'init' task
 */
package tascas302nivel2;

import java.util.Scanner;

import tascas302nivel2.observer.ConcreteStockBroker;
import tascas302nivel2.observer.StockMarketAgency;
import tascas302nivel2.observer.StockMarketObserver;
import tascas302nivel2.service.StockMarketDataService;

public class App {
    public static void main(String[] args) {
        // Create the observable (Stock Broker)
        ConcreteStockBroker broker = new ConcreteStockBroker();
        
        // Create observers (Stock Market Agencies)
        StockMarketAgency agency1 = new StockMarketAgency("Wall Street Journal");
        StockMarketAgency agency2 = new StockMarketAgency("Bloomberg");
        StockMarketAgency agency3 = new StockMarketAgency("Financial Times");
        
        // Register observers with the observable
        broker.registerObserver(agency1);
        broker.registerObserver(agency2);
        broker.registerObserver(agency3);
        
        System.out.println("=== All agencies are now observing the stock broker ===\n");
        
        // Choose between demo mode and real-time mode
        Scanner scanner = new Scanner(System.in);
        System.out.println("Choose mode:");
        System.out.println("1. Demo mode (simulated data)");
        System.out.println("2. Real-time mode (connects to Alpha Vantage API)");
        System.out.print("Enter choice (1 or 2): ");
        
        int choice = scanner.nextInt();
        
        if (choice == 1) {
            // Demo mode with simulated data
            runDemoMode(broker);
        } else {
            // Real-time mode
            runRealTimeMode(broker, scanner);
        }
        
        scanner.close();
    }
    
    private static void runDemoMode(ConcreteStockBroker broker) {
        System.out.println("\n=== Running in DEMO mode with simulated data ===\n");
        
        // Simulate stock price changes
        broker.setStockPrice("AAPL", 190.50);
        System.out.println();
        
        broker.setStockPrice("AAPL", 187.25);
        System.out.println();
        
        broker.setStockPrice("MSFT", 420.75);
        System.out.println();
        
        broker.setStockPrice("AAPL", 195.75);
        System.out.println();
        
        // Remove one observer if we have at least 2 observers
        if (broker.getObservers().size() >= 2) {
            StockMarketObserver secondObserver = broker.getObservers().get(1);
            broker.removeObserver(secondObserver);
            System.out.println("=== Bloomberg has stopped observing ===\n");
            
            broker.setStockPrice("AAPL", 198.30);
        }
    }
    
    private static void runRealTimeMode(ConcreteStockBroker broker, Scanner scanner) {
        System.out.println("\n=== Running in REAL-TIME mode with Alpha Vantage API ===\n");
        
        // Get API key from user
        System.out.print("Enter your Alpha Vantage API key: ");
        String apiKey = scanner.next();
        
        // Get stock symbols to monitor
        System.out.print("Enter stock symbols to monitor (comma-separated, e.g., AAPL,MSFT,GOOGL): ");
        scanner.nextLine(); // Consume newline
        String symbolsInput = scanner.nextLine();
        String[] symbols = symbolsInput.split(",");
        
        // Create the stock market service
        StockMarketDataService dataService = new StockMarketDataService(apiKey, broker);
        
        // Start real-time monitoring
        dataService.startRealTimeMonitoring(symbols);
        
        System.out.println("\nMonitoring started. Press Enter to stop...");
        scanner.nextLine();
        
        // Stop monitoring when user presses Enter
        dataService.stopRealTimeMonitoring();
        System.out.println("Monitoring stopped.");
    }
}
